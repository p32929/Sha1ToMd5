{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["style","root","flexGrow","AppBar","backgroundColor","TypographyToolbar","color","TypographyBox","marginTop","Paper","margin","padding","ButtonLeft","marginLeft","marginBottom","marginRight","ButtonRight","App","props","context","_this","Object","D_SourceCodes_ReactJS_Projects_GooglePlayFacebookMD5Helper_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_SourceCodes_ReactJS_Projects_GooglePlayFacebookMD5Helper_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_SourceCodes_ReactJS_Projects_GooglePlayFacebookMD5Helper_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","setSha1","bind","D_SourceCodes_ReactJS_Projects_GooglePlayFacebookMD5Helper_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","setMd5","copy","state","sha1","md5","open","snackbarText","e","console","log","target","value","setState","toString","trim","_this2","arr","split","byteValues","i","length","hexToDec","Buffer","from","setTimeout","s","j","carry","digits","parseInt","charAt","push","reverse","join","_this3","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","react__WEBPACK_IMPORTED_MODULE_6___default","a","_material_ui_core_Grid_Grid__WEBPACK_IMPORTED_MODULE_11___default","direction","spacing","_material_ui_core_es_AppBar_AppBar__WEBPACK_IMPORTED_MODULE_8__","position","_material_ui_core_es_Toolbar_Toolbar__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_es_Typography_Typography__WEBPACK_IMPORTED_MODULE_10__","variant","_material_ui_core_es_IconButton_IconButton__WEBPACK_IMPORTED_MODULE_17__","href","_material_ui_core_es_SvgIcon_SvgIcon__WEBPACK_IMPORTED_MODULE_16__","d","container","justify","alignContent","_material_ui_core_es_Paper_Paper__WEBPACK_IMPORTED_MODULE_12__","align","gutterBottom","_material_ui_core_TextField_TextField__WEBPACK_IMPORTED_MODULE_13___default","label","onChange","_material_ui_core_es_Button_Button__WEBPACK_IMPORTED_MODULE_14__","onClick","_material_ui_core_es_Snackbar_Snackbar__WEBPACK_IMPORTED_MODULE_15__","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","react_default","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.082cb317.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport AppBar from \"@material-ui/core/es/AppBar/AppBar\";\nimport Toolbar from \"@material-ui/core/es/Toolbar/Toolbar\";\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Button from \"@material-ui/core/es/Button/Button\";\nimport Snackbar from \"@material-ui/core/es/Snackbar/Snackbar\";\nimport SvgIcon from \"@material-ui/core/es/SvgIcon/SvgIcon\";\nimport IconButton from \"@material-ui/core/es/IconButton/IconButton\";\n\nconst style = {\n    root: {\n        flexGrow: 1,\n    },\n    AppBar: {\n        backgroundColor: '#388E3C'\n    },\n    TypographyToolbar: {\n        color: '#FFF',\n        flexGrow: 1,\n    },\n    TypographyBox: {\n        marginTop: 16,\n    },\n    Paper: {\n        margin: 16,\n        padding: 16,\n    },\n    ButtonLeft: {\n        marginLeft: 16,\n        marginBottom: 16,\n        marginTop: 16,\n        marginRight: 8\n    },\n    ButtonRight: {\n        marginLeft: 8,\n        marginBottom: 16,\n        marginTop: 16,\n        marginRight: 16\n    },\n\n}\n\nclass App extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.setSha1 = this.setSha1.bind(this)\n        this.setMd5 = this.setMd5.bind(this)\n        this.copy = this.copy.bind(this)\n\n        this.state = {\n            sha1: '',\n            md5: '',\n            open: false,\n            snackbarText: ''\n        }\n    }\n\n    setSha1(e) {\n        console.log(e.target.value)\n        if (e.target.value != null) {\n            this.setState({\n                sha1: e.target.value.toString().trim()\n            })\n        }\n    }\n\n    setMd5() {\n        var sha1 = this.state.sha1\n        if (sha1 !== '') {\n            var arr = sha1.split(\":\")\n            var byteValues = []\n\n            for (var i = 0; i < arr.length; i++) {\n                byteValues[i] = this.hexToDec(arr[i])\n            }\n\n            this.setState({\n                md5: Buffer.from(byteValues).toString('base64')\n            })\n        }\n        else {\n            this.setState({\n                open: true,\n                snackbarText: 'Please input a SHA1 value first'\n            })\n\n            setTimeout(() => {\n                this.setState({\n                    open: false\n                })\n            }, 2000)\n        }\n    }\n\n    hexToDec(s) {\n        var i, j, digits = [0], carry;\n        for (i = 0; i < s.length; i += 1) {\n            carry = parseInt(s.charAt(i), 16);\n            for (j = 0; j < digits.length; j += 1) {\n                digits[j] = digits[j] * 16 + carry;\n                carry = digits[j] / 10 | 0;\n                digits[j] %= 10;\n            }\n            while (carry > 0) {\n                digits.push(carry % 10);\n                carry = carry / 10 | 0;\n            }\n        }\n        return digits.reverse().join('');\n    }\n\n    copy(e) {\n        if (this.state.md5 !== '') {\n            var textField = document.createElement('textarea')\n            textField.innerText = this.state.md5.trim()\n            document.body.appendChild(textField)\n            textField.select()\n            document.execCommand('copy')\n            textField.remove()\n\n            this.setState({\n                open: true,\n                snackbarText: 'Text copied'\n            })\n\n            setTimeout(() => {\n                this.setState({\n                    open: false\n                })\n            }, 2000)\n        } else {\n            this.setState({\n                open: true,\n                snackbarText: 'Empty value'\n            })\n\n            setTimeout(() => {\n                this.setState({\n                    open: false\n                })\n            }, 2000)\n        }\n    }\n\n    render() {\n        return (\n\n            <Grid style={style.root} direction=\"row\" spacing={16}>\n                <AppBar position='static' style={style.AppBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" style={style.TypographyToolbar}>\n                            Facebook MD5 Helper for Release APK\n                        </Typography>\n\n                        <IconButton\n                            href=\"https://github.com/p32929\"\n                            color=\"inherit\">\n                            <SvgIcon>\n                                <path\n                                    d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"/>\n                            </SvgIcon>\n                        </IconButton>\n\n                    </Toolbar>\n                </AppBar>\n\n                <Grid container direction='row' justify='center' alignContent='center'>\n                    <Paper style={style.Paper}>\n                        <Grid container direction='column' justify='center' alignContent='center'>\n\n                            <Typography align='center' variant=\"title\" gutterBottom>\n                                Input Sha1 value here\n                            </Typography>\n\n                            <TextField\n                                label=\"SHA1\"\n                                margin=\"normal\"\n                                onChange={this.setSha1}\n                            />\n\n                            <Typography style={style.TypographyBox} align='center' variant=\"title\" gutterBottom>\n                                Converted MD5 value will be here\n                            </Typography>\n\n                            <TextField\n                                label=\"MD5\"\n                                margin=\"normal\"\n                                value={this.state.md5}/>\n\n                        </Grid>\n\n                        <Grid container direction='row' justify='center' alignContent='center'>\n                            <Button style={style.ButtonLeft} variant=\"contained\" color=\"primary\" onClick={this.setMd5}>\n                                Convert\n                            </Button>\n                            <Button style={style.ButtonRight} variant=\"contained\" color=\"primary\" onClick={this.copy}>\n                                Copy\n                            </Button>\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={6000}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{this.state.snackbarText}</span>}\n                />\n\n            </Grid>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}